# -*- coding: utf-8 -*-
"""MBC_no_MBC_count_company.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vzZPJOmvFlt175NNLyrEQNcVWIJv57bZ
"""

#df = df[df['nani'] != True]
#df['nani'] = pd.isna(df['salary'])
import pandas as pd


def human_format(num):
    num = float('{:.3g}'.format(num))
    magnitude = 0
    while abs(num) >= 1000:
        magnitude += 1
        num /= 1000.0
    return '{}{}'.format('{:f}'.format(num).rstrip('0').rstrip('.'), ['', 'K', 'M', 'B', 'T'][magnitude])

# column in csv
column1 = 'income'
column2 = 'income_lic'
column3 = 'employee_num'
column4 = 'taxes'
column5 = 'salary'
df = pd.read_csv('fns_for_model.csv', delimiter=';')
df[column4] = df["taxesProfit"] + df["taxesVAT"] + df["taxesEmplSal"]
df[column5] = df['fot'] / df['employee_num']

def count_company(column, df, sizeBusiness = False):
  company_group = []
  df_income = df[(df['year'] == 2020) & (df['quarter'] == 2)]
  if sizeBusiness == False: 
    df_income = df_income.loc[df_income['businessSize'] < 2]
  else:
    df_income = df_income.loc[df_income['businessSize'] >= 2]
  income_sum = df_income[column].sum()
  df2 = df_income.sort_values(by=column, ascending=False)
  data = list(df2[column])
  i1 = 1
  while (df2[column][0:i1].sum() < 0.8 * income_sum):
      i1 += 1
  A = i1
  company_group.append(A)
  i2 = i1 + 1
  while (df2[column][i1:i2].sum() < 0.15 * income_sum):
      i2 += 1
  B = i2 - i1
  company_group.append(B)
  D = len(data) - len([it for it in data if it])
  C = len(df2[column]) - A - B - D
  company_group.append(C)
  company_group.append(D)
  return company_group
company_group_income = count_company(column1, df)
company_group_income_MSB = count_company(column1, df, sizeBusiness = True)
company_group_income_lic = count_company(column2, df)
company_group_income_lic_MSB = count_company(column2, df, sizeBusiness = True)

company_group_employee_num = count_company(column3, df)
company_group_employee_num_MSB = count_company(column3, df, sizeBusiness = True)
company_group_taxes = count_company(column4, df)
company_group_taxes_MSB = count_company(column4, df, sizeBusiness = True)


df_exel = pd.DataFrame({'Метрика': ['Доход', 'Доход от лицензий', 'Налоги в бюджет', 'Кол-во работников'], 
                   'A-MCB': [company_group_income[0], company_group_income_lic[0], company_group_taxes[0], company_group_employee_num[0]],
                   'B-MCB': [company_group_income[1], company_group_income_lic[1], company_group_taxes[1], company_group_employee_num[1]],
                   'C-MCB': [company_group_income[2], company_group_income_lic[2], company_group_taxes[2], company_group_employee_num[2]],
                   'D-MCB': [company_group_income[3], company_group_income_lic[3], company_group_taxes[3], company_group_employee_num[3]], 
                   'A-no-МСБ': [company_group_income_MSB[0], company_group_income_lic_MSB[0], company_group_taxes_MSB[0], company_group_employee_num_MSB[0]],
                   'B-no-МСБ': [company_group_income_MSB[1], company_group_income_lic_MSB[1], company_group_taxes_MSB[1], company_group_employee_num_MSB[1]],
                   'C-no-МСБ': [company_group_income_MSB[2], company_group_income_lic_MSB[2], company_group_taxes_MSB[2], company_group_employee_num_MSB[2]], 
                   'D-no-МСБ': [company_group_income_MSB[3], company_group_income_lic_MSB[3], company_group_taxes_MSB[3], company_group_employee_num_MSB[3]]})

df_exel.to_excel('ABCD_MCB_no_MCB_Q2_2020.xlsx')