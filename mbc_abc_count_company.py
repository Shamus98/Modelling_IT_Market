# -*- coding: utf-8 -*-
"""MBC_ABC_count_company.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GHfmyvlX4YJ0cgtTkI09hA8nGaj8gNIm
"""

import pandas as pd


def human_format(num):
    num = float('{:.3g}'.format(num))
    magnitude = 0
    while abs(num) >= 1000:
        magnitude += 1
        num /= 1000.0
    return '{}{}'.format('{:f}'.format(num).rstrip('0').rstrip('.'), ['', 'K', 'M', 'B', 'T'][magnitude])

# column in csv
column1 = 'income'
column2 = 'income_lic'
column3 = 'employee_num'
column4 = 'taxes'
column5 = 'salary'
df = pd.read_csv('fns_for_model.csv', delimiter=';')
df[column4] = df["taxesProfit"] + df["taxesVAT"] + df["taxesEmplSal"]
df[column5] = df['fot'] / df['employee_num']

def count_company(column, df):
  company_group = []
  df_income = df[(df['year'] == 2020) & (df['quarter'] == 2)]
  # if sizeBusiness == True: 
  #   df_income_mbc = df_income.loc[df_income['businessSize'] < 2]
  income_sum = df_income[column].sum()
  df2 = df_income.sort_values(by=column, ascending=False)
  data = list(df2[column])

  df_income_mbc = df_income.loc[df_income['businessSize'] < 2]
  df2_mbc = df_income_mbc.sort_values(by=column, ascending=False)
  data_mbc = list(df2_mbc[column])
  i1 = 1
  i11 = 0
  while (df2[column][0:i1].sum() < 0.8 * income_sum):
      i1 += 1
      if list(df2['businessSize'][i1-1:i1])[0] < 2:
        i11 += 1
  A = i1
  company_group.append(A)
  i2 = i1 + 1
  i22 = 0
  while (df2[column][i1:i2].sum() < 0.15 * income_sum):
      i2 += 1
      if list(df2['businessSize'][i2-1:i2])[0] < 2:
        i22 += 1
  B = i2 - i1
  A_mbc = i11
  B_mbc = i22
  company_group.append(B)
  D = len(data) - len([it for it in data if it])
  D_mbc = len(data_mbc) - len([it for it in data_mbc if it])
  C = len(df2[column]) - A - B - D
  C_mbc = len(df2_mbc[column]) - A_mbc - B_mbc - D_mbc
  company_group.append(C)
  company_group.append(D)
  company_group.append(A_mbc)
  company_group.append(B_mbc)
  company_group.append(C_mbc)
  company_group.append(D_mbc)
  return company_group

company_group_income = count_company(column1, df)
company_group_income_lic = count_company(column2, df)
company_group_employee_num = count_company(column3, df)
company_group_taxes = count_company(column4, df)


df_exel = pd.DataFrame({'Метрика': ['Доход', 'Доход от лицензий', 'Налоги в бюджет', 'Кол-во работников'], 
                   'A': [company_group_income[0], company_group_income_lic[0], company_group_taxes[0], company_group_employee_num[0]],
                   'B': [company_group_income[1], company_group_income_lic[1], company_group_taxes[1], company_group_employee_num[1]],
                   'C': [company_group_income[2], company_group_income_lic[2], company_group_taxes[2], company_group_employee_num[2]],
                   'D': [company_group_income[3], company_group_income_lic[3], company_group_taxes[3], company_group_employee_num[3]], 
                   'A-МСБ': [company_group_income[4], company_group_income_lic[4], company_group_taxes[4], company_group_employee_num[4]],
                   'B-МСБ': [company_group_income[5], company_group_income_lic[5], company_group_taxes[5], company_group_employee_num[5]],
                   'C-МСБ': [company_group_income[6], company_group_income_lic[6], company_group_taxes[6], company_group_employee_num[6]], 
                   'D-МСБ': [company_group_income[7], company_group_income_lic[7], company_group_taxes[7], company_group_employee_num[7]]})

df_exel.to_excel('ABCD_only_MBC_Q2_2020.xlsx')